<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bda.bdaqm.electric.mapper.TicketCheckResultMapper">
	
	<!-- 获取校验结果列表 -->
	<select id="getResultData" resultType="com.bda.bdaqm.electric.model.TicketCheckResult">
	    SELECT T.*,base.ticket_no ticketNo 
	      FROM o_gea_lcam_sc_sp_pd_wticket_base base
	right join gzpfx01.BDA_TICKET_CHECK_RESULT T
	        on base.id = t.ticket_id
	    <where>
	        1=1
	        <if test="params.ticketNo != null and params.ticketNo != ''">
	            AND base.ticket_no like concat('%',#{params.ticketNo},'%')
	        </if>
	        <if test="params.ticketType != null and params.ticketType != ''">
	            AND T.TICKET_TYPE = #{params.ticketType}
	        </if>
	        
	        <if test="params.department != null and params.department != '' and params.department != '广州供电局有限公司'">
	       		and base.department_oid in (${params.orgIds})
	        </if>
	        <!-- <if test="params.department != null and params.department != ''">
	            AND T.CLASSES = #{params.department}
	        </if> -->
	        
	        <if test="params.workPrincipal != null and params.workPrincipal != ''">
	            AND T.WORK_PRINCIPAL like concat('%',#{params.workPrincipal},'%')
	        </if>
	        <if test="params.ticketSigner != null and params.ticketSigner != ''">
	            AND T.TICKET_SIGNER like concat('%',#{params.ticketSigner},'%')
	        </if>
	        <if test="params.workLicensor != null and params.workLicensor != ''">
	            AND T.LICENSOR like concat('%',#{params.workLicensor},'%')
	        </if>
	        <if test="params.standardResult != null and params.standardResult != ''">
	            AND T.STANDARD_RESULT = #{params.standardResult}
	        </if>
	        <!-- 父容器查询条件 -->
	        <if test="params.checkResult != null and params.checkResult != ''">
	            AND ${params.checkResult}
	        </if>
	        <if test="flag !=null and flag ==1">
	            AND (T.check_result = '1' or T.check_result = '2')
	        </if>
	        <if test="flag !=null and flag ==2">
	            AND (T.standard_result = '1' or T.standard_result = '2')
	        </if>
	        <if test="params.p_batch != null and params.p_batch != ''">
	            AND T.BATCH_TIME = #{params.p_batch}
	        </if>
	        <if test="params.p_ticketType != null and params.p_ticketType != ''">
	            AND T.TICKET_TYPE = #{params.p_ticketType}
	        </if>
	        
	        <if test="params.p_department != null and params.p_department != '' and params.p_department != '广州供电局有限公司'">
	       		and base.department_oid in (${params.p_orgids})
	        </if>
	        <!-- <if test="params.p_department != null and params.p_department != ''">
	            AND T.CLASSES = #{params.p_department}
	        </if> -->
	        
	        <if test="params.p_workPrincipal != null and params.p_workPrincipal != ''">
	            AND T.WORK_PRINCIPAL like concat('%',#{params.p_workPrincipal},'%')
	        </if>
	        <if test="params.p_ticketSigner != null and params.p_ticketSigner != ''">
	            AND T.TICKET_SIGNER like concat('%',#{params.p_ticketSigner},'%')
	        </if>
	        <if test="params.p_workLicensor != null and params.p_workLicensor != ''">
	            AND T.LICENSOR like concat('%',#{params.p_workLicensor},'%')
	        </if>
	        <if test="params.p_ticketEndTime1 != null and params.p_ticketEndTime1 != ''">
	            AND T.ticket_final_time &gt;= #{params.p_ticketEndTime1}
	        </if>
	        <if test="params.p_ticketEndTime2 != null and params.p_ticketEndTime2 != ''">
	            AND T.ticket_final_time &lt; #{params.p_ticketEndTime2}
	        </if>
	    </where>
	    order by T.ticket_id asc
	</select>
	
	<!-- 计算柱状图数据 -->
	<select id="getChartData" resultType="map">
	    SELECT            
	           SUM(CASE WHEN t.misuse_ticket = '1' or t.misuse_ticket = '2' THEN 1 ELSE 0 END) AS CNT_MISUSE,
	           SUM(CASE WHEN t.beyond_plan = '1' or t.beyond_plan = '2' THEN 1 ELSE 0 END) AS CNT_PLAN,
	           SUM(CASE WHEN t.keyword_error = '1' or t.keyword_error = '2' THEN 1 ELSE 0 END) AS CNT_KEYWORD_ERROR,
	           SUM(CASE WHEN t.work_member_count = '1' or t.work_member_count = '2' THEN 1 ELSE 0 END) AS CNT_MEMBER,
	           SUM(CASE WHEN t.fillin_task_error = '1' or t.fillin_task_error = '2' THEN 1 ELSE 0 END) AS CNT_FILLINTASK,
	           SUM(CASE WHEN t.fillin_safe_error = '1' or t.fillin_safe_error = '2' THEN 1 ELSE 0 END) AS CNT_FILLINSAFE,
	           SUM(CASE WHEN t.double_issue_error = '1' or t.double_issue_error = '2' THEN 1 ELSE 0 END) AS CNT_DOUBLEISSUE,
	           SUM(CASE WHEN t.empty_permiss_time = '1' or t.empty_permiss_time = '2' THEN 1 ELSE 0 END) AS CNT_EMPTYPMIS,
	           SUM(CASE WHEN t.handle_change = '1'or t.handle_change = '2' THEN 1 ELSE 0 END) AS CNT_CHANGE,
	           SUM(CASE WHEN t.handle_delay = '1'or t.handle_delay = '2' THEN 1 ELSE 0 END) AS CNT_DELAY,
	           SUM(CASE WHEN t.final_content_error = '1'or t.final_content_error = '2' THEN 1 ELSE 0 END) AS CNT_FINALCONTENT,
	           SUM(CASE WHEN t.licensor_no_sign = '1'or t.licensor_no_sign = '2' THEN 1 ELSE 0 END) AS CNT_LICENSORNOSIGN,
	           SUM(CASE WHEN t.keep_multiple = '1'or t.keep_multiple = '2' THEN 1 ELSE 0 END) AS CNT_MULTIPLE,
	           SUM(CASE WHEN t.sign_error = '1'or sign_error = '2' THEN 1 ELSE 0 END) AS CNT_SIGNERROR,
	           SUM(CASE WHEN t.no_save = '1'or t.no_save = '2' THEN 1 ELSE 0 END) AS CNT_NOSAVE,
	           SUM(CASE WHEN t.nonstandard_word = '1'or t.nonstandard_word = '2' THEN 1 ELSE 0 END) AS CNT_NONSTANDARD
	      FROM o_gea_lcam_sc_sp_pd_wticket_base base
	right join gzpfx01.BDA_TICKET_CHECK_RESULT T
	        on base.id = t.ticket_id
	     <where>
	        (T.CHECK_RESULT = '1' OR T.STANDARD_RESULT = '1' OR T.CHECK_RESULT = '2' OR T.STANDARD_RESULT = '2')
	        <if test="params.batch != null and params.batch != ''">
	            AND T.BATCH_TIME = #{params.batch}
	        </if>
	        <if test="params.ticketType != null and params.ticketType != ''">
	            AND T.TICKET_TYPE = #{params.ticketType}
	        </if>
	        
	        <if test="params.department != null and params.department != '' and params.department != '广州供电局有限公司'">
	       		and base.department_oid in (${params.orgIds})
	        </if>
	        <!-- <if test="params.department != null and params.department != ''">
	            AND T.CLASSES = #{params.department}
	        </if> -->
	        
	        <if test="params.workPrincipal != null and params.workPrincipal != ''">
	            AND T.WORK_PRINCIPAL like concat('%',#{params.workPrincipal},'%')
	        </if>
	        <if test="params.ticketSigner != null and params.ticketSigner != ''">
	            AND T.TICKET_SIGNER like concat('%',#{params.ticketSigner},'%')
	        </if>
	        <if test="params.workLicensor != null and params.workLicensor != ''">
	            AND T.LICENSOR like concat('%',#{params.workLicensor},'%')
	        </if>
	        <if test="params.ticketEndTime1 != null and params.ticketEndTime1 != ''">
	            AND T.ticket_final_time &gt;= #{params.ticketEndTime1}
	        </if>
	        <if test="params.ticketEndTime2 != null and params.ticketEndTime2 != ''">
	            AND T.ticket_final_time &lt; #{params.ticketEndTime2}
	        </if>
	        <!-- 父容器查询条件 -->
	        <if test="params.p_batch != null and params.p_batch != ''">
	            AND T.BATCH_TIME = #{params.p_batch}
	        </if>
	        <if test="params.p_ticketType != null and params.p_ticketType != ''">
	            AND T.TICKET_TYPE = #{params.p_ticketType}
	        </if>
	        
	        <if test="params.p_department != null and params.p_department != '' and params.p_department != '广州供电局有限公司'">
	       		and base.department_oid in (${params.p_orgids})
	        </if>
	        <!-- <if test="params.p_department != null and params.p_department != ''">
	            AND T.CLASSES = #{params.p_department}
	        </if> -->
	        
	        <if test="params.p_workPrincipal != null and params.p_workPrincipal != ''">
	            AND T.WORK_PRINCIPAL like concat('%',#{params.p_workPrincipal},'%')
	        </if>
	        <if test="params.p_ticketSigner != null and params.p_ticketSigner != ''">
	            AND T.TICKET_SIGNER like concat('%',#{params.p_ticketSigner},'%')
	        </if>
	        <if test="params.p_workLicensor != null and params.p_workLicensor != ''">
	            AND T.LICENSOR like concat('%',#{params.p_workLicensor},'%')
	        </if>
	        <if test="params.p_ticketEndTime1 != null and params.p_ticketEndTime1 != ''">
	            AND T.ticket_final_time &gt;= #{params.p_ticketEndTime1}
	        </if>
	        <if test="params.p_ticketEndTime2 != null and params.p_ticketEndTime2 != ''">
	            AND T.ticket_final_time &lt; #{params.p_ticketEndTime2}
	        </if>
	    </where>
	</select>
	
	<select id="getExceptionBarData" resultType="map">
	    SELECT            
	           SUM(CASE WHEN misuse_ticket = '2' THEN 1 ELSE 0 END) AS CNT_MISUSE,
	           SUM(CASE WHEN beyond_plan = '2' THEN 1 ELSE 0 END) AS CNT_PLAN,
	           SUM(CASE WHEN keyword_error = '2' THEN 1 ELSE 0 END) AS CNT_KEYWORD_ERROR,
	           SUM(CASE WHEN work_member_count = '2' THEN 1 ELSE 0 END) AS CNT_MEMBER,
	           SUM(CASE WHEN fillin_task_error = '2' THEN 1 ELSE 0 END) AS CNT_FILLINTASK,
	           SUM(CASE WHEN fillin_safe_error = '2' THEN 1 ELSE 0 END) AS CNT_FILLINSAFE,
	           SUM(CASE WHEN double_issue_error = '2' THEN 1 ELSE 0 END) AS CNT_DOUBLEISSUE,
	           SUM(CASE WHEN empty_permiss_time = '2' THEN 1 ELSE 0 END) AS CNT_EMPTYPMIS,
	           SUM(CASE WHEN handle_change = '2' THEN 1 ELSE 0 END) AS CNT_CHANGE,
	           SUM(CASE WHEN handle_delay = '2' THEN 1 ELSE 0 END) AS CNT_DELAY,
	           SUM(CASE WHEN final_content_error = '2' THEN 1 ELSE 0 END) AS CNT_FINALCONTENT,
	           SUM(CASE WHEN licensor_no_sign = '2' THEN 1 ELSE 0 END) AS CNT_LICENSORNOSIGN,
	           SUM(CASE WHEN keep_multiple = '2' THEN 1 ELSE 0 END) AS CNT_MULTIPLE,
	           SUM(CASE WHEN sign_error = '2' THEN 1 ELSE 0 END) AS CNT_SIGNERROR,
	           SUM(CASE WHEN no_save = '2' THEN 1 ELSE 0 END) AS CNT_NOSAVE,
	           SUM(CASE WHEN nonstandard_word = '2' THEN 1 ELSE 0 END) AS CNT_NONSTANDARD
	      FROM gzpfx01.BDA_TICKET_CHECK_RESULT T
	     <where>
	        (T.CHECK_RESULT = '2' OR T.STANDARD_RESULT = '2')
	        <if test="params.batch != null and params.batch != ''">
	            AND T.BATCH_TIME = #{params.batch}
	        </if>
	        <if test="params.ticketType != null and params.ticketType != ''">
	            AND T.TICKET_TYPE = #{params.ticketType}
	        </if>
	        <if test="params.department != null and params.department != ''">
	            AND T.CLASSES = #{params.department}
	        </if>
	        <if test="params.workPrincipal != null and params.workPrincipal != ''">
	            AND T.WORK_PRINCIPAL like concat('%',#{params.workPrincipal},'%')
	        </if>
	        <if test="params.ticketSigner != null and params.ticketSigner != ''">
	            AND T.TICKET_SIGNER like concat('%',#{params.ticketSigner},'%')
	        </if>
	        <if test="params.workLicensor != null and params.workLicensor != ''">
	            AND T.LICENSOR like concat('%',#{params.workLicensor},'%')
	        </if>
	        <if test="params.ticketEndTime1 != null and params.ticketEndTime1 != ''">
	            AND T.ticket_final_time &gt;= #{params.ticketEndTime1}
	        </if>
	        <if test="params.ticketEndTime2 != null and params.ticketEndTime2 != ''">
	            AND T.ticket_final_time &lt; #{params.ticketEndTime2}
	        </if>
	        <!-- 父容器查询条件 -->
	        <if test="params.p_batch != null and params.p_batch != ''">
	            AND T.BATCH_TIME = #{params.p_batch}
	        </if>
	        <if test="params.p_ticketType != null and params.p_ticketType != ''">
	            AND T.TICKET_TYPE = #{params.p_ticketType}
	        </if>
	        <if test="params.p_department != null and params.p_department != ''">
	            AND T.CLASSES = #{params.p_department}
	        </if>
	        <if test="params.p_workPrincipal != null and params.p_workPrincipal != ''">
	            AND T.WORK_PRINCIPAL like concat('%',#{params.p_workPrincipal},'%')
	        </if>
	        <if test="params.p_ticketSigner != null and params.p_ticketSigner != ''">
	            AND T.TICKET_SIGNER like concat('%',#{params.p_ticketSigner},'%')
	        </if>
	        <if test="params.p_workLicensor != null and params.p_workLicensor != ''">
	            AND T.LICENSOR like concat('%',#{params.p_workLicensor},'%')
	        </if>
	        <if test="params.p_ticketEndTime1 != null and params.p_ticketEndTime1 != ''">
	            AND T.ticket_final_time &gt;= #{params.p_ticketEndTime1}
	        </if>
	        <if test="params.p_ticketEndTime2 != null and params.p_ticketEndTime2 != ''">
	            AND T.ticket_final_time &lt; #{params.p_ticketEndTime2}
	        </if>
	    </where>
	</select>
	
	<select id="getPieData" resultType="map">
	    SELECT SUM(CASE WHEN T.check_result = '0' THEN 1 ELSE 0 END) AS CNT_QUALIFIED,
	           SUM(CASE WHEN T.check_result = '1' or T.check_result = '2' THEN 1 ELSE 0 END) AS CNT_UNQUALIFIED,
	           <!-- SUM(CASE WHEN check_result = '2' THEN 1 ELSE 0 END) AS CNT_EXCEPTION, -->
	           
	           SUM(CASE WHEN T.standard_result = '0' THEN 1 ELSE 0 END) AS CNT_STANDARD,
	           SUM(CASE WHEN T.standard_result = '1' or T.standard_result = '2' THEN 1 ELSE 0 END) AS CNT_NONSTANDARD<!-- ,
	           SUM(CASE WHEN standard_result = '2' THEN 1 ELSE 0 END) AS CNT_STD_EXCEPTION -->
	      FROM o_gea_lcam_sc_sp_pd_wticket_base base
	right join gzpfx01.BDA_TICKET_CHECK_RESULT T
	        on base.id = t.ticket_id
	     <where>
	        1=1
	        <if test="params.batch != null and params.batch != ''">
	            AND T.BATCH_TIME = #{params.batch}
	        </if>
	        <if test="params.ticketType != null and params.ticketType != ''">
	            AND T.TICKET_TYPE = #{params.ticketType}
	        </if>
	        
	        <if test="params.department != null and params.department != '' and params.department != '广州供电局有限公司'">
	       		and base.department_oid in (${params.orgIds})
	        </if>
	        <!-- <if test="params.department != null and params.department != ''">
	            AND T.CLASSES = #{params.department}
	        </if> -->
	        
	        <if test="params.workPrincipal != null and params.workPrincipal != ''">
	            AND T.WORK_PRINCIPAL like concat('%',#{params.workPrincipal},'%')
	        </if>
	        <if test="params.ticketSigner != null and params.ticketSigner != ''">
	            AND T.TICKET_SIGNER like concat('%',#{params.ticketSigner},'%')
	        </if>
	        <if test="params.workLicensor != null and params.workLicensor != ''">
	            AND T.LICENSOR like concat('%',#{params.workLicensor},'%')
	        </if>
	        <if test="params.ticketEndTime1 != null and params.ticketEndTime1 != ''">
	            AND T.ticket_final_time &gt;= #{params.ticketEndTime1}
	        </if>
	        <if test="params.ticketEndTime2 != null and params.ticketEndTime2 != ''">
	            AND T.ticket_final_time &lt; #{params.ticketEndTime2}
	        </if>
	        <!-- 父容器查询条件 -->
	        <if test="params.p_batch != null and params.p_batch != ''">
	            AND T.BATCH_TIME = #{params.p_batch}
	        </if>
	        <if test="params.p_ticketType != null and params.p_ticketType != ''">
	            AND T.TICKET_TYPE = #{params.p_ticketType}
	        </if>
	        
	        <if test="params.p_department != null and params.p_department != '' and params.p_department != '广州供电局有限公司'">
	       		and base.department_oid in (${params.p_orgids})
	        </if>
	        <!-- <if test="params.p_department != null and params.p_department != ''">
	            AND T.CLASSES = #{params.p_department}
	        </if> -->
	        
	        <if test="params.p_workPrincipal != null and params.p_workPrincipal != ''">
	            AND T.WORK_PRINCIPAL like concat('%',#{params.p_workPrincipal},'%')
	        </if>
	        <if test="params.p_ticketSigner != null and params.p_ticketSigner != ''">
	            AND T.TICKET_SIGNER like concat('%',#{params.p_ticketSigner},'%')
	        </if>
	        <if test="params.p_workLicensor != null and params.p_workLicensor != ''">
	            AND T.LICENSOR like concat('%',#{params.p_workLicensor},'%')
	        </if>
	        <if test="params.p_ticketEndTime1 != null and params.p_ticketEndTime1 != ''">
	            AND T.ticket_final_time &gt;= #{params.p_ticketEndTime1}
	        </if>
	        <if test="params.p_ticketEndTime2 != null and params.p_ticketEndTime2 != ''">
	            AND T.ticket_final_time &lt; #{params.p_ticketEndTime2}
	        </if>
	    </where>
	</select>
	
	<select id="getClassCombobox" resultType="com.bda.bdaqm.util.ComboBoxItem">
        SELECT DISTINCT T.DEPARTMENT_NAME AS TEXT,
			   T.DEPARTMENT_NAME AS VALUE
	      FROM gzpfx01.BDA_UNIT_CLASS T
         WHERE T.LEV = '5'
    </select>
    
    <select id="getTicketType" resultType="com.bda.bdaqm.util.ComboBoxItem">
        SELECT DISTINCT T.TICKET_TYPE AS TEXT, 
               T.TICKET_TYPE AS VALUE
          FROM gzpfx01.BDA_TICKET_WORK_TYPE T
      ORDER BY VALUE
    </select>
    
    <select id="getPersonName" resultType="com.bda.bdaqm.util.ComboBoxItem">
        SELECT DISTINCT T.PERSON_NAME AS TEXT, 
               T.PERSON_NAME AS VALUE
          FROM gzpfx01.BDA_THREE_PERSON T
         WHERE T.THREE_TYPE LIKE CONCAT('%',#{type},'%')
    </select>
    
    	
	<select id = "selectById" resultType = "com.bda.bdaqm.electric.model.TicketCheck">
		SELECT
		        base.ticket_no ticketNo,
		        base.id ticketId,
				base.function_location_name stationLineName,
			 	base.work_task workTask,
			 	base.work_place workPlace,
				safty.pull_breaker pullBreaker,
				safty.pull_switch pullSwitch,
				safty.pull_breaker_switch pullBreakerSwitch,
				safty.dcpower_lowp_circle dcPowerLowpCircle,
				safty.switch_earthwire_insulation switchEarthwireInsulation,
				safty.required_safty,
				safty.safty_and_care,
				base.whether_outer_dept,
				base.ticket_counter_sign_uid,
				base.ticket_sign_uid,
				to_char(base.ticket_sign_time,'yyyy-MM-dd HH:mm:ss') ticketSignTime,
				to_char(base.ticket_counter_sign_time,'yyyy-MM-dd HH:mm:ss') ticketCounterSignTime,
				to_char(base.plan_end_time,'yyyy-MM-dd HH:mm:ss') planEndTime,
				to_char(base.plan_start_time,'yyyy-MM-dd HH:mm:ss') planStartTime,
				to_char(exe.delay_time,'yyyy-MM-dd HH:mm:ss') workDelayTime,
				to_char(exe.delay_fill_time,'yyyy-MM-dd HH:mm:ss') workDelayApplyTime,
				to_char(workinggap.gap_time,'yyyy-MM-dd HH:mm:ss') workBreakTime,
				to_char(base.permission_time,'yyyy-MM-dd HH:mm:ss') workPermissionTime,
				to_char(base.work_end_time,'yyyy-MM-dd HH:mm:ss') workEndTime,
				to_char(exe.measure_end_fill_time,'yyyy-MM-dd HH:mm:ss') measureEndFillTime,
				to_char(workinggap.gap_start_time,'yyyy-MM-dd HH:mm:ss') workStartTime,
				to_char(base.ticket_end_time,'yyyy-MM-dd HH:mm:ss') ticketEndTime,
				to_char(exe.measure_end_fill_time,'yyyy-MM-dd HH:mm:ss') measureEndFillTime,
				to_char(exe.dispatch_fill_time,'yyyy-MM-dd HH:mm:ss') dispatchFillTime,
				to_char(exe.delay_time,'yyyy-MM-dd HH:mm:ss') workDelayTime,
				to_char(exe.safe_account_time,'yyyy-MM-dd HH:mm:ss') safeAccountTime,
				exe.dispatch_earthwire_count numUnremovedGroundWire,
				exe.work_end_principal_uid,
				exe.dispatch_earthwire_code unremovedGroundWire,
				exe.dispatch_switch_code unopenedGroundKnife,
				exe.dispatch_switch_count numUnopenedGroundKnife,
				exe.is_line_switch_recove,
				exe.live_safe_measure,
				safty.repair_control_uid repairControlUname,
				base.work_member_count numOfWork,
				base.work_member_uname workMemberUname,
				base.secondbill_count numSecondMeasure,
				base.whether_secondbill isHandleSecondMeasures,
				base.ticket_type,
				safty.billboard billboard,
				safty.other_care otherCare,
				base.id,
				base.department_oname department,
				base.work_principal_uid,
				base.work_permission_uid,
				base.whether_guardian_sign whetherGuardianSign,
				safty.whether_line_grounding whetherLineGrounding,
				safty.remark,
				exe.safe_account_uname safeAccountUname,
				exe.add_content_detail addContentDetail,
				per.is_touch isTouch,
				per.touch_position touchPosition,
				per.ele_generatrix_wire eleGeneratrixWire,
				per.ele_switch eleSwitch,
				per.ele_part elePart,
				per.other_care permissionOtherCare,
				safty.highp_device_state highpDeviceState,
				safty.power_circle_state powerCircleState,
				base.ticket_sign_uid ticketSigner,
				base.work_principal_uid workPrincipal,
				base.work_permission_uid workLicensor,
				workinggap.gap_principal_uid workBreakPrincipal,
				base.ticket_counter_sign_uid ticketCounterSigner,
				workinggap.gap_permission_uid workBreakLicensor,
				workinggap.gap_start_permission_uid workStartLicensor,
				workinggap.gap_start_principal_uid workStartPrincipal,
				base.work_end_permission_uid ticketEndLicensor,
				exe.measure_end_per_uid measureEndPerUname,
				base.guardian_uid guardianName,
				base.ticket_receive_uid ticketReceiveUname,
				per.line_grounding_uid lineGroundingUname,
				exe.dispatch_pri_uid dispatchPriUname,
				exe.dispatch_uid dispatchUname,
				exe.change_principal_uid changePrincipal,
				change_new_principal_uid changeNewPrincipal,
				per.work_principal_id permisstionPrincipal,
				exe.work_end_principal_uid workEndPrincipal
		FROM
			o_gea_lcam_sc_sp_pd_wticket_base base 
	 		LEFT JOIN o_gea_lcam_sc_sp_pd_wticket_permission per ON base.id = per.wticket_id
	 		LEFT JOIN o_gea_lcam_sc_sp_pd_wticket_saftymeasures safty ON base.id = safty.wticket_id
			LEFT JOIN o_gea_lcam_sc_sp_pd_wticket_execute exe ON (base.id = exe.wticket_id)
	 		LEFT JOIN o_gea_lcam_sc_sp_pd_wticket_workinggap workinggap ON workinggap.wticket_id = base.id 
		WHERE
			base.id = #{id}
	</select>
	
	

	<select id = "getAllUser" resultType="map">
		select user_id,user_name from o_gea_lcam_sc_sp_pd_wticket_user
	</select>


	<select id = "getResultById" resultType = "com.bda.bdaqm.electric.model.TicketCheckResult">
		select * from gzpfx01.BDA_TICKET_CHECK_RESULT where ticket_id = #{id} and batch_time =#{batchTime}
	</select>
    
    <select id="selectChildById" resultType="map">
        select description,field from gzpfx01.bda_ticket_check_result_children
         where ticket_id = #{id} and batch_time =#{batchTime}
    </select>
    
    <select id="getAllBatch" resultType="com.bda.bdaqm.util.ComboBoxItem">
        select save_time as text,
               save_time as value
          from gzpfx01.bda_result_batch
      order by value desc
    </select>
    
    <select id="getBatchsForManage" resultType="map">
        select save_time 
          from gzpfx01.bda_result_batch
      order by save_time desc
    </select>
    
    <delete id="delResBatch">
        delete from gzpfx01.bda_result_batch where save_time = #{batch}
    </delete>
    
    <delete id="delParentBatch">
        delete from gzpfx01.bda_ticket_check_result where batch_time = #{batch}
    </delete>
    
    <delete id="delChildBatch">
        delete from gzpfx01.bda_ticket_check_result_children where batch_time = #{batch}
    </delete>
    
</mapper>