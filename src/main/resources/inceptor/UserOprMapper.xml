<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bda.bdaqm.admin.mapper.UserOprMapper">
	
	<select id="getUserByAccount" resultType="com.bda.bdaqm.admin.model.User">
		SELECT *
		FROM bda_auth_user 
		<where>
		    1=1
		    <if test="user.userId != null and user.userId != ''">
		        and user_id = #{user.userId}
		    </if>
		    <if test="user.account != null and user.account != ''">
		        and account = #{user.account}
		    </if>
		    <if test="user.userName != null and user.userName != ''">
		        and user_name = #{user.userName}
		    </if>
		</where>
	</select>
	
	<select id="getUserByEqField" resultType="com.bda.bdaqm.admin.model.User">
	    SELECT user_id userId,status,password,user_name userName,account,org_id orgId  
		FROM bda_auth_user 
		<where>
		    account != 'admin'
		    <if test="param != null and param != ''">
		        and (
		            account like concat('%',#{param},'%')
		            or user_name like concat('%',#{param},'%')
		            )
		    </if>
		    <if test="account != null and account != ''">
		        and account = #{account}
		    </if>
		    <if test="userName != null and userName != ''">
		        or user_name = #{userName}
		    </if>
		</where>
	</select>
	
	<update id="editUserPas">
	    update bda_auth_user
	       set password = #{newPas}
	     where user_id = #{userId}  
	</update>
	
	<update id="resetUserPasswordByUserIds" parameterType="java.util.Collection">
        update bda_auth_user 
		   SET password=#{psw}
		 WHERE user_id in
		<foreach collection="ids" item="id" index="index"
             open="(" close=")" separator=",">
				 #{id}
        </foreach>
	</update>
	<insert id="addSelective" parameterType="com.bda.bdaqm.admin.model.User" useGeneratedKeys="true" keyProperty="user.userId"  >
		insert into bda_auth_user(account,user_name,password,org_id,status,create_time,create_user_account,
		update_time,update_user_account,department_id)
		values(#{user.account},#{user.userName},#{user.password},#{user.orgId},#{user.status},
		#{user.createTime},#{user.createUserAccount},
		#{user.updateTime},#{user.updateUserAccount},#{user.departmentId})
	</insert>
	
	<delete id="deleteByPrimaryKeys">
	 	delete from bda_auth_user where user_id = #{userId}
	</delete>


	<!--新增-->
	<update id="update" parameterType="com.bda.bdaqm.admin.model.User" >
		update bda_auth_user
			set user_name=#{user.userName},status=#{user.status},update_time=#{user.updateTime},
			update_user_account=#{user.updateUserAccount}
			where user_id=#{user.userId}
	</update>

	<update id="updateRole">
		update bda_auth_user_role
			set role_id=#{roleId}
			where user_id=#{userId}
	</update>

	<select id="getAllUsers" resultType="com.bda.bdaqm.admin.model.User">
		select * from bda_auth_user
	</select>

	<select id="getUserWithUserRole" resultType="com.bda.bdaqm.admin.model.User">
		select * from bda_auth_user
		where user_id in (select user_id from bda_auth_user_role)
		<if test="keyword != null and keyword != ''">
			and user_name=#{keyword}
		</if>
	</select>

	<select id="getUserWithoutUserRole" resultType="com.bda.bdaqm.admin.model.User">
		select * from bda_auth_user
		where user_id not in (select user_id from bda_auth_user_role)
		<if test="keyword != null and keyword != ''">
			and user_name=#{keyword}
		</if>
	</select>

	<resultMap id="getAllResult"   type="HashMap">
		<result property="userId" column="user_id" jdbcType="VARCHAR" />
		<result property="userName" column="user_name" jdbcType="VARCHAR"/>
		<result property="roleId" column="role_id" jdbcType="VARCHAR"/>
	</resultMap>
	<select id="getUserAndUserRole" resultMap="getAllResult">
		select bda_auth_user.user_id,bda_auth_user.user_name,bda_auth_user_role.role_id
		from bda_auth_user
		left join bda_auth_user_role
		on bda_auth_user.user_id=bda_auth_user_role.user_id
		<if test="keyword != null and keyword != ''">
			where bda_auth_user.user_name=#{keyword}
		</if>
	</select>


	<resultMap id="getUsersResult"   type="HashMap">
		<result property="userId" column="user_id" jdbcType="VARCHAR" />
		<result property="departmentId" column="department_id" jdbcType="INTEGER"/>
		<result property="userName" column="user_name" jdbcType="VARCHAR"/>
		<result property="account" column="account" jdbcType="VARCHAR"/>
		<result property="status" column="status" jdbcType="VARCHAR"/>
		<result property="createUserAccount" column="create_user_account" jdbcType="VARCHAR"/>
		<result property="roleId" column="role_id" jdbcType="VARCHAR"/>
	</resultMap>
	<select id="selectUsersAndRoleByCreate" resultMap="getUsersResult">
		select bda_auth_user.user_id,bda_auth_user.department_id,bda_auth_user.user_name,bda_auth_user.account,
		bda_auth_user.status,bda_auth_user.create_user_account,bda_auth_user_role.role_id
		 from bda_auth_user
		 left join bda_auth_user_role
		 on bda_auth_user.user_id=bda_auth_user_role.user_id
		 <if test="keyword != null and keyword != ''">
			 where bda_auth_user.user_name=#{keyword}
		 </if>
		 <if test="create != null and create != ''">
			 where bda_auth_user.create_user_account=#{create}
		 </if>
	</select>

	<select id="selectUsersByDepartmentIdOrName" resultMap="getUsersResult">
		select bda_auth_user.user_id,bda_auth_user.department_id,bda_auth_user.user_name,bda_auth_user.account,
		bda_auth_user.status,bda_auth_user.create_user_account,bda_auth_user_role.role_id
		 from bda_auth_user
		 left join bda_auth_user_role
		 on bda_auth_user.user_id=bda_auth_user_role.user_id
		<if test="keyword != null and keyword != ''">
			where bda_auth_user.user_name like "%"#{keyword}"%"
		</if>
		<if test="departmentId != null and departmentId != ''">
			where bda_auth_user.department_id=#{departmentId}
		</if>
	</select>

	<select id="selectUserIdsByDepartmentId" resultType="java.lang.String">
		select user_id from bda_auth_user where department_id=#{departmentId}
	</select>
</mapper>