<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bda.bdaqm.admin.mapper.MyRoleMapper">
	
	<select id="getAllRoles" resultType="com.bda.bdaqm.admin.model.Role">
	    select role_id roleId,
	           role_name roleName,
	           description,
	           create_time createTime
	      from bda_auth_role
	      <where>
	      1=1
		      <if test="exceoptAdmin != null and exceoptAdmin!= ''">
		          and role_id != '10001'
		      </if>
		      <if test="param != null and param != ''">
		          and role_name like concat('%', #{param}, '%')
		      </if>
	      </where>
	</select>
	
	<select id="getRolesByUserId" resultType="com.bda.bdaqm.admin.model.Role">
	    select role.role_id roleId,
	           role.role_name roleName,
	           role.description,
	           role.create_time createTime
	      from bda_auth_roles role
	 left join bda_auth_user_role uRole
	        on role.role_id = uRole.role_id
	    <where>
	    role.role_id = uRole.role_id
	        <if test="userId != null adnd userId != ''">
	            uRole.user_id = #{userId}
	        </if>
	    </where>
	</select>
	
	<select id="getRoleIdsByUserId" resultType="String">
	    select role_id from bda_auth_user_role where user_id = #{userId}
	</select>
	
	<select id="searchUsersByRoleIdKeywordFilter" resultType="com.bda.admin.model.view.VRoleUser">
		select t1.* ,nvl2(t2.role_id, 1, 0)as assigned 
		from bda_auth_user t1 
		left join bda_auth_user_role t2 
		  on t1.user_id = t2.user_id and t2.role_id = #{roleId}
		<where>
		t1.account != 'admin'
			<choose>
				<when test="filter == 'assigned'">
					and nvl2(t2.role_id,1, 0) = 1
				</when>
				<when test="filter == 'unassigned'">
					and nvl2(t2.role_id,1, 0) = 0
				</when>
			</choose>
			<if test=" keyword != null and keyword != '' ">
				and t1.user_name like #{keyword}
			</if>
		</where>
		order by t1.user_name
	</select>

	<!--新增-->
	<select id="getRolesByAccount" resultType="com.bda.bdaqm.admin.model.Role">
		select * from bda_auth_role where create_user_account=#{createUserAccount}
	</select>

	<select id="getAllRole" resultType="com.bda.bdaqm.admin.model.Role">
		select *
		from bda_auth_role
	</select>

	<insert id="addRole">
		insert into bda_auth_role (role_name,description,create_time,create_user_account)
		values (#{roleName},#{roleDescription},#{createTime},#{createUserAccount})
	</insert>

	<update id="updateRole">
		update bda_auth_role set role_name=#{roleName},description=#{roleDescription},
		update_time=#{updateTime},update_user_account=#{updateUserAccount}
		where role_id=#{roleId}
	</update>

	<select id="getRoleNameByUserId" resultType="java.lang.String">
		select role_name from bda_auth_role where role_id=(select role_id from bda_auth_user_role where user_id=#{userId})
	</select>
</mapper>